package dan.woodward.plugin;

import java.util.HashMap;
import java.util.Map;

import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerCommandPreprocessEvent;
import org.bukkit.event.player.PlayerLoginEvent;
import org.bukkit.event.player.PlayerToggleSprintEvent;
import org.bukkit.plugin.java.JavaPlugin;

public class RunFast extends JavaPlugin implements Listener {
	
	float speed_slow = 0.1F;
	float speed_normal = 0.2F;
	float speed_fast = 0.3F;
	float speed_faster = 0.4F;
	float speed_fastest = 0.5F;
	float speed_insane = 0.6F;

	private Map<Player, Float> playerSpeedCache = new HashMap<>();
	
	@SuppressWarnings("serial")
	private Map<String, Float> speeds = new HashMap<String, Float>() {{
		put("slow", speed_slow);
		put("normal", speed_normal);
		put("fast", speed_fast);
		put("faster", speed_faster);
		put("fastest", speed_fastest);
		put("insane", speed_insane);
	}};
	
	@Override
	public void onEnable(){
		getServer().getPluginManager().registerEvents(this, this);
	}

	@Override
	public void onDisable() {
		
	}

	@EventHandler
	public void onCommand(PlayerCommandPreprocessEvent event) {
		String[] commandArgs = event.getMessage().substring(1).toLowerCase().split("\\s+");

		String generalUsageMsg = "usage: Run (slow|normal|fast|faster|fastest|insane)";

		if ("run".equalsIgnoreCase(commandArgs[0])) {
			event.setCancelled(true);

			Player player = event.getPlayer();

			if (commandArgs.length == 1 || commandArgs.length > 2) {
				player.sendMessage(generalUsageMsg);
				return;
			}

			String command = commandArgs[1].toLowerCase();
			if (speeds.containsKey(command)) {
				Float speed = speeds.get(command);
				playerSpeedCache.put(player, speed);
				player.sendMessage("Your speed is set to: " + command + " (" + speed + ")");
			} else {
				player.sendMessage(command + " is not a valid speed setting\n" + generalUsageMsg);
			}
		}
	}

	@EventHandler
	public void onRun(PlayerToggleSprintEvent event) {
		Player player = event.getPlayer();
		if (player.isSprinting()) {
			player.setWalkSpeed(speed_normal);
		} else {
			Float playerSpeed = playerSpeedCache.get(player);
			player.setWalkSpeed(playerSpeed);
		}
	}

	@EventHandler
	public void onPlayerLogin(PlayerLoginEvent event) {
		Player player = event.getPlayer();
		
		if (!playerSpeedCache.containsKey(player)) {
			playerSpeedCache.put(player,speed_fast);
		}
		
		getLogger().info(player + " logged in");
	}
}
